function 公共方法里面

/*分页*/
/*
 * string $m 模型名称
 * int $pagesize 每页显示条数
 * array OR string OR int $map 查询条件
 */
function getpage( &$m, $map, $pagesize = 10){

    $m1    = clone $m;//浅复制一个模型

    $count = $m->where($map)->count();//连惯操作后会对join等操作进行重置

    $m     = $m1;//为保持在为定的连惯操作，浅复制一个模型

    $p     = new Think\Page($count,$pagesize);

    $p->lastSuffix = false;

    $p->rollPage   = 5;

    $p->setConfig('header','<li>共<b>%TOTAL_ROW%</b>条记录&nbsp;&nbsp;每页<b>'.$pagesize.'</b>条&nbsp;&nbsp;第<b>%NOW_PAGE%</b>页/共<b>%TOTAL_PAGE%</b>页</li>');

    $p->setConfig('prev','上一页');

    $p->setConfig('next','下一页');

    $p->setConfig('last','末页');

    $p->setConfig('first','首页');

    $p->setConfig('theme','%FIRST% %UP_PAGE% %LINK_PAGE% %DOWN_PAGE% %END% %HEADER%');

    $p->parameter  = I('get.');

    $m->limit($p->firstRow, $p->listRows);

    return $p;
}


控制器:

$m = D('LibraryApi');  //模型
$map['library_id'] = $lib_id;   //条件
$show = getpage($m,$map,10)->show();  //分页
$lists = $m->where($map)->select();  //查询
$this->assign('page',$show);
$this->assign('lists',$lists);
$this->display();


视图:

<div class="pagelist">
   {$page}
</div>


CSS样式:

/*分页样式*/
.pagelist {padding:10px 0; text-align:center;}
.pagelist li{list-style:none;}
.pagelist a{ margin:0 3px;border-radius:3px; border:1px solid #dfdfdf;display:inline-block; padding:5px 12px;}
.pagelist .current{ background:#09F; color:#FFF; border-color:#09F;border-radius:3px;display:inline-block; padding:5px 12px;}
.pagelist .prev,.first,.next,.end,.num{ border-radius:3px; border:1px solid #dfdfdf;display:inline-block; padding:5px 12px;}
.pagelist a:hover{background:#09F; color:#FFF; border-color:#09F; }
/**/

